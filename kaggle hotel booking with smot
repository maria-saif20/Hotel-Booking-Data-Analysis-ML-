{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7553004,"sourceType":"datasetVersion","datasetId":4399100}],"dockerImageVersionId":30646,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/mariasaif/hotel-booking-addressing-class-imbalance-with-smot?scriptVersionId=199442133\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# Hotel Booking Data Analysis\nThis notebook contains a comprehensive analysis of the hotel booking data. The analysis includes data cleaning, preprocessing, exploratory data analysis (EDA), and predictive modeling.\n\n## Data Loading\nFirst, let's load the necessary libraries and the dataset.\n","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Load the dataset\nfile_path = (r\"/kaggle/input/predictive-analytics-in-hotel-booking-management/Hotel.csv\")\nhotel_data = pd.read_csv(file_path)\nhotel_data.head()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:26.314731Z","iopub.execute_input":"2024-10-04T06:42:26.315163Z","iopub.status.idle":"2024-10-04T06:42:26.482476Z","shell.execute_reply.started":"2024-10-04T06:42:26.31513Z","shell.execute_reply":"2024-10-04T06:42:26.481006Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Data Cleaning and Preprocessing\nBefore diving into the analysis, it's essential to clean and preprocess the data. This includes handling any anomalies and preparing the data for analysis.\n","metadata":{}},{"cell_type":"code","source":"hotel_data.columns\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:26.48491Z","iopub.execute_input":"2024-10-04T06:42:26.485405Z","iopub.status.idle":"2024-10-04T06:42:26.493437Z","shell.execute_reply.started":"2024-10-04T06:42:26.48537Z","shell.execute_reply":"2024-10-04T06:42:26.492235Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check for missing values\nmissing_values = hotel_data.isnull().sum()\n\n# Data types of the columns\ndata_types = hotel_data.dtypes\n\n# Display missing values and data types\nmissing_values, data_types\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:26.494903Z","iopub.execute_input":"2024-10-04T06:42:26.49529Z","iopub.status.idle":"2024-10-04T06:42:26.536445Z","shell.execute_reply.started":"2024-10-04T06:42:26.495258Z","shell.execute_reply":"2024-10-04T06:42:26.534806Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Exploratory Data Analysis (EDA)\nIn this section, we perform an exploratory data analysis to understand the dataset better. We will look at various aspects of the data through visualizations and statistical analysis.\n","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Setting plot style\nsns.set(style=\"whitegrid\")\n\n# Investigating the distribution of 'avg_price_per_room'\nplt.figure(figsize=(10, 6))\nsns.boxplot(hotel_data['avg_price_per_room'])\nplt.title('Boxplot of Average Price Per Room')\nplt.show()\n\n# Checking the number of entries with 'avg_price_per_room' as 0\nzero_price_count = (hotel_data['avg_price_per_room'] == 0).sum()\nzero_price_count","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:26.539732Z","iopub.execute_input":"2024-10-04T06:42:26.540171Z","iopub.status.idle":"2024-10-04T06:42:26.774042Z","shell.execute_reply.started":"2024-10-04T06:42:26.540129Z","shell.execute_reply":"2024-10-04T06:42:26.772855Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Setting up the figure\nplt.figure(figsize=(18, 12))\n\n# Subplot for 'no_of_adults'\nplt.subplot(2, 3, 1)\nsns.countplot(data=hotel_data, x='no_of_adults')\nplt.title('Distribution of Number of Adults')\n\n# Subplot for 'avg_price_per_room'\nplt.subplot(2, 3, 2)\nsns.histplot(data=hotel_data, x='avg_price_per_room', kde=True)\nplt.title('Distribution of Average Price Per Room')\n\n# Subplot for 'lead_time'\nplt.subplot(2, 3, 3)\nsns.histplot(data=hotel_data, x='lead_time', kde=True)\nplt.title('Distribution of Lead Time')\n\n# Subplot for 'type_of_meal_plan'\nplt.subplot(2, 3, 4)\nsns.countplot(data=hotel_data, y='type_of_meal_plan')\nplt.title('Distribution of Meal Plans')\n\n# Subplot for 'room_type_reserved'\nplt.subplot(2, 3, 5)\nsns.countplot(data=hotel_data, y='room_type_reserved')\nplt.title('Distribution of Room Types Reserved')\n\n# Subplot for 'booking_status'\nplt.subplot(2, 3, 6)\nsns.countplot(data=hotel_data, x='booking_status')\nplt.title('Distribution of Booking Status')\n\n# Adjusting layout\nplt.tight_layout()\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:26.775726Z","iopub.execute_input":"2024-10-04T06:42:26.776096Z","iopub.status.idle":"2024-10-04T06:42:29.998079Z","shell.execute_reply.started":"2024-10-04T06:42:26.776046Z","shell.execute_reply":"2024-10-04T06:42:29.996487Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Distribution of number of adults in bookings\nplt.figure(figsize=(8, 6))\nsns.countplot(x='no_of_adults', data=hotel_data)\nplt.title('Distribution of Number of Adults in Bookings')\nplt.xlabel('Number of Adults')\nplt.ylabel('Count')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:29.999842Z","iopub.execute_input":"2024-10-04T06:42:30.000335Z","iopub.status.idle":"2024-10-04T06:42:30.283942Z","shell.execute_reply.started":"2024-10-04T06:42:30.000294Z","shell.execute_reply":"2024-10-04T06:42:30.282504Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Proportion of booking status\nbooking_status_counts = hotel_data['booking_status'].value_counts()\nplt.figure(figsize=(8, 6))\nbooking_status_counts.plot(kind='bar')\nplt.title('Booking Status Counts')\nplt.xlabel('Booking Status')\nplt.ylabel('Count')\nplt.xticks(rotation=0)\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:30.285857Z","iopub.execute_input":"2024-10-04T06:42:30.286664Z","iopub.status.idle":"2024-10-04T06:42:30.542969Z","shell.execute_reply.started":"2024-10-04T06:42:30.286623Z","shell.execute_reply":"2024-10-04T06:42:30.541642Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Predictive Modeling\nWe will implement predictive models to forecast booking cancellations. This will include setting up the data for modeling, creating the models, and evaluating their performance.\n","metadata":{}},{"cell_type":"code","source":"# Import necessary libraries\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score, classification_report\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\n\n# Ensure the column names match your dataset\nprint(hotel_data.columns)\n\n# Define the correct categorical feature columns\ncategorical_features = ['type_of_meal_plan', 'room_type_reserved', 'market_segment_type']  # Replace with correct names\n\n# Assuming 'booking_status' is the target variable\nX = hotel_data.drop(['booking_status', 'Booking_ID', 'arrival_date'], axis=1)\ny = hotel_data['booking_status']\n\n# One-hot encoding categorical variables and scaling numerical ones\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', StandardScaler(), X.select_dtypes(include=['int64', 'float64']).columns),\n        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features)])\n\n# Create pipeline for KNN model\nknn_pipeline = Pipeline(steps=[('preprocessor', preprocessor),\n                               ('classifier', KNeighborsClassifier())])\n\n# Create pipeline for Decision Tree model\ndt_pipeline = Pipeline(steps=[('preprocessor', preprocessor),\n                              ('classifier', DecisionTreeClassifier())])\n\n# Split the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Fit and evaluate KNN model\nknn_pipeline.fit(X_train, y_train)\ny_pred_knn = knn_pipeline.predict(X_test)\naccuracy_knn = accuracy_score(y_test, y_pred_knn)\nprint(\"KNN Accuracy:\", accuracy_knn)\nprint(\"Classification Report (KNN):\")\nprint(classification_report(y_test, y_pred_knn))\n\n# Fit and evaluate Decision Tree model\ndt_pipeline.fit(X_train, y_train)\ny_pred_dt = dt_pipeline.predict(X_test)\naccuracy_dt = accuracy_score(y_test, y_pred_dt)\nprint(\"\\nDecision Tree Accuracy:\", accuracy_dt)\nprint(\"Classification Report (Decision Tree):\")\nprint(classification_report(y_test, y_pred_dt))\n\n# Fine-tune hyperparameters using GridSearchCV for KNN\nparam_grid = {'classifier__n_neighbors': [3, 5, 7, 9]}\ngrid_search_knn = GridSearchCV(knn_pipeline, param_grid, cv=5)\ngrid_search_knn.fit(X_train, y_train)\n\nbest_knn_model = grid_search_knn.best_estimator_\n\n# Evaluate the best KNN model\ny_pred_best_knn = best_knn_model.predict(X_test)\naccuracy_best_knn = accuracy_score(y_test, y_pred_best_knn)\nprint(\"\\nBest KNN Accuracy:\", accuracy_best_knn)\nprint(\"Classification Report (Best KNN):\")\nprint(classification_report(y_test, y_pred_best_knn))\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:30.546897Z","iopub.execute_input":"2024-10-04T06:42:30.547375Z","iopub.status.idle":"2024-10-04T06:42:53.018127Z","shell.execute_reply.started":"2024-10-04T06:42:30.547338Z","shell.execute_reply":"2024-10-04T06:42:53.016191Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Handling Class Imbalance with SMOTE\nGiven the imbalance in the booking status classes, we will use the SMOTE technique to balance the dataset and then retrain our models to see if there's an improvement in performance.\n","metadata":{}},{"cell_type":"code","source":"# Import necessary libraries\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.metrics import accuracy_score, classification_report\nimport pandas as pd\n\n# Assuming hotel_data is a DataFrame that contains the hotel booking data\n# Define the correct categorical feature columns\ncategorical_features = ['type_of_meal_plan', 'room_type_reserved', 'market_segment_type']\n\n# Assuming 'booking_status' is the target variable\nX = hotel_data.drop(['booking_status', 'Booking_ID', 'arrival_date'], axis=1)\ny = hotel_data['booking_status']\n\n# One-hot encoding categorical variables\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', 'passthrough', X.select_dtypes(include=['int64', 'float64']).columns),\n        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features)])\n\n# Apply the preprocessor (One-hot encoding)\nX_preprocessed = preprocessor.fit_transform(X)\n\n# Split the preprocessed data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X_preprocessed, y, test_size=0.2, random_state=42)\n\n# Apply SMOTE to balance the dataset\nsmote = SMOTE(random_state=42)\nX_train_smote, y_train_smote = smote.fit_resample(X_train, y_train)\n\n# Scaling only the numerical features\nscaler = StandardScaler()\nX_train_smote_scaled = scaler.fit_transform(X_train_smote)\nX_test_scaled = scaler.transform(X_test)\n\n# Create and evaluate KNN model\nknn_model = KNeighborsClassifier()\nknn_model.fit(X_train_smote_scaled, y_train_smote)\ny_pred_knn = knn_model.predict(X_test_scaled)\naccuracy_knn = accuracy_score(y_test, y_pred_knn)\nprint(\"KNN Accuracy with SMOTE:\", accuracy_knn)\nprint(\"Classification Report (KNN with SMOTE):\")\nprint(classification_report(y_test, y_pred_knn))\n\n# Create and evaluate Decision Tree model\ndt_model = DecisionTreeClassifier()\ndt_model.fit(X_train_smote_scaled, y_train_smote)\ny_pred_dt = dt_model.predict(X_test_scaled)\naccuracy_dt = accuracy_score(y_test, y_pred_dt)\nprint(\"\\nDecision Tree Accuracy with SMOTE:\", accuracy_dt)\nprint(\"Classification Report (Decision Tree with SMOTE):\")\nprint(classification_report(y_test, y_pred_dt))\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:53.020049Z","iopub.execute_input":"2024-10-04T06:42:53.020564Z","iopub.status.idle":"2024-10-04T06:42:56.343738Z","shell.execute_reply.started":"2024-10-04T06:42:53.02052Z","shell.execute_reply":"2024-10-04T06:42:56.342302Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Questions for the Data\nTo generate insights, here are 15 questions we can ask and answer through visualizations and analysis:\n\n1. What is the distribution of booking status (canceled vs. not canceled)?\n2. How do lead times differ for canceled and not canceled bookings?\n3. What are the peak months for hotel bookings?\n4. Is there a relationship between the average price per room and the booking cancellation rate?\n5. How do meal plans affect booking cancellations?\n6. What is the trend in hotel bookings over the years?\n7. Does the number of special requests correlate with cancellation rates?\n8. Are repeat guests more likely to cancel their bookings?\n9. What is the distribution of room types reserved, and how does it relate to cancellations?\n10. How does the number of adults and children affect booking cancellations?\n11. What market segments contribute most to hotel bookings, and which have higher cancellation rates?\n12. Does the requirement for a car parking space influence booking cancellations?\n13. How do booking trends vary with different room types?\n14. What is the relationship between previous cancellations and the likelihood of future cancellations?\n15. Does the average lead time vary across different market segments?","metadata":{}},{"cell_type":"code","source":"# 1. Distribution of Booking Status\nbooking_status_distribution = hotel_data['booking_status'].value_counts(normalize=True) * 100\nplt.figure(figsize=(6, 6))\nbooking_status_distribution.plot(kind='bar', color=['blue', 'green'])\nplt.title('Booking Status Distribution')\nplt.xlabel('Booking Status')\nplt.ylabel('Percentage')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:56.345506Z","iopub.execute_input":"2024-10-04T06:42:56.345961Z","iopub.status.idle":"2024-10-04T06:42:56.616982Z","shell.execute_reply.started":"2024-10-04T06:42:56.34592Z","shell.execute_reply":"2024-10-04T06:42:56.615594Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 2. Lead Times for Canceled vs. Not Canceled Bookings\nlead_time_comparison = hotel_data.groupby('booking_status')['lead_time'].mean()\nplt.figure(figsize=(6, 6))\nlead_time_comparison.plot(kind='bar', color=['red', 'orange'])\nplt.title('Lead Time Comparison')\nplt.xlabel('Booking Status')\nplt.ylabel('Mean Lead Time')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:56.618576Z","iopub.execute_input":"2024-10-04T06:42:56.619048Z","iopub.status.idle":"2024-10-04T06:42:56.890056Z","shell.execute_reply.started":"2024-10-04T06:42:56.619005Z","shell.execute_reply":"2024-10-04T06:42:56.888761Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 3. Peak Months for Hotel Bookings\nmonthly_bookings = hotel_data['arrival_month'].value_counts().sort_index()\nplt.figure(figsize=(8, 6))\nsns.countplot(data=hotel_data, x='arrival_month', order=monthly_bookings.index)\nplt.title('Monthly Hotel Bookings')\nplt.xlabel('Month')\nplt.ylabel('Number of Bookings')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:56.891637Z","iopub.execute_input":"2024-10-04T06:42:56.892013Z","iopub.status.idle":"2024-10-04T06:42:57.281732Z","shell.execute_reply.started":"2024-10-04T06:42:56.891982Z","shell.execute_reply":"2024-10-04T06:42:57.280165Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 4. Relationship between Average Price per Room and Booking Cancellation Rate\nplt.figure(figsize=(8, 6))\nsns.scatterplot(data=hotel_data, x='avg_price_per_room', y='booking_status', hue='booking_status')\nplt.title('Average Price per Room vs. Booking Cancellation Rate')\nplt.xlabel('Average Price per Room')\nplt.ylabel('Booking Status')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:57.283526Z","iopub.execute_input":"2024-10-04T06:42:57.283891Z","iopub.status.idle":"2024-10-04T06:42:58.964669Z","shell.execute_reply.started":"2024-10-04T06:42:57.283862Z","shell.execute_reply":"2024-10-04T06:42:58.963276Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 5. Effect of Meal Plans on Booking Cancellations\nplt.figure(figsize=(8, 6))\nsns.countplot(data=hotel_data, x='type_of_meal_plan', hue='booking_status')\nplt.title('Meal Plan vs. Booking Cancellations')\nplt.xlabel('Meal Plan')\nplt.ylabel('Number of Bookings')\nplt.legend(title='Booking Status')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:58.966809Z","iopub.execute_input":"2024-10-04T06:42:58.967258Z","iopub.status.idle":"2024-10-04T06:42:59.386811Z","shell.execute_reply.started":"2024-10-04T06:42:58.967219Z","shell.execute_reply":"2024-10-04T06:42:59.385339Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 6. Trend in Hotel Bookings Over the Years\n# Convert 'arrival_year' column to datetime format\nhotel_data['arrival_year'] = pd.to_datetime(hotel_data['arrival_year'], format='%Y')\n\n# Extract year from the datetime column\nhotel_data['year'] = hotel_data['arrival_year'].dt.year\n\n# Count hotel bookings per year\nyearly_bookings = hotel_data['year'].value_counts().sort_index()\n\nplt.figure(figsize=(8, 6))\nsns.lineplot(data=yearly_bookings, marker='o')\nplt.title('Hotel Bookings Trend Over Years')\nplt.xlabel('Year')\nplt.ylabel('Number of Bookings')\nplt.xticks(yearly_bookings.index)\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:59.388695Z","iopub.execute_input":"2024-10-04T06:42:59.389108Z","iopub.status.idle":"2024-10-04T06:42:59.689548Z","shell.execute_reply.started":"2024-10-04T06:42:59.389044Z","shell.execute_reply":"2024-10-04T06:42:59.688148Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 7. Correlation between Number of Special Requests and Cancellation Rates\nplt.figure(figsize=(8, 6))\nsns.scatterplot(data=hotel_data, x='no_of_special_requests', y='booking_status', hue='booking_status')\nplt.title('Special Requests vs. Booking Cancellation Rate')\nplt.xlabel('Number of Special Requests')\nplt.ylabel('Booking Status')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:42:59.6918Z","iopub.execute_input":"2024-10-04T06:42:59.692203Z","iopub.status.idle":"2024-10-04T06:43:01.788171Z","shell.execute_reply.started":"2024-10-04T06:42:59.69217Z","shell.execute_reply":"2024-10-04T06:43:01.78637Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 8. Likelihood of Booking Cancellations for Repeat Guests\nplt.figure(figsize=(8, 6))\nsns.countplot(data=hotel_data, x='repeated_guest', hue='booking_status')\nplt.title('Booking Cancellations for Repeat Guests')\nplt.xlabel('Repeated Guest')\nplt.ylabel('Number of Bookings')\nplt.legend(title='Booking Status')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:43:01.790615Z","iopub.execute_input":"2024-10-04T06:43:01.791099Z","iopub.status.idle":"2024-10-04T06:43:02.107029Z","shell.execute_reply.started":"2024-10-04T06:43:01.791034Z","shell.execute_reply":"2024-10-04T06:43:02.105342Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 9. Distribution of Room Types Reserved and Relation to Cancellations\nplt.figure(figsize=(8, 6))\nsns.countplot(data=hotel_data, x='room_type_reserved', hue='booking_status')\nplt.title('Room Type vs. Booking Cancellations')\nplt.xlabel('Room Type Reserved')\nplt.ylabel('Number of Bookings')\nplt.legend(title='Booking Status')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:43:02.11304Z","iopub.execute_input":"2024-10-04T06:43:02.113621Z","iopub.status.idle":"2024-10-04T06:43:02.604402Z","shell.execute_reply.started":"2024-10-04T06:43:02.113574Z","shell.execute_reply":"2024-10-04T06:43:02.602711Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 10. Effect of Number of Adults and Children on Booking Cancellations\nplt.figure(figsize=(8, 6))\nsns.countplot(data=hotel_data, x='no_of_adults', hue='booking_status', palette='viridis')\nplt.title('Effect of Adults on Booking Cancellations')\nplt.xlabel('Number of Adults')\nplt.ylabel('Number of Bookings')\nplt.legend(title='Booking Status')\nplt.show()\n\nplt.figure(figsize=(8, 6))\nsns.countplot(data=hotel_data, x='no_of_children', hue='booking_status', palette='muted')\nplt.title('Effect of Children on Booking Cancellations')\nplt.xlabel('Number of Children')\nplt.ylabel('Number of Bookings')\nplt.legend(title='Booking Status')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:43:02.605811Z","iopub.execute_input":"2024-10-04T06:43:02.606182Z","iopub.status.idle":"2024-10-04T06:43:03.399939Z","shell.execute_reply.started":"2024-10-04T06:43:02.606151Z","shell.execute_reply":"2024-10-04T06:43:03.398649Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 11. Market Segments Contributing to Hotel Bookings and Cancellation Rates\nplt.figure(figsize=(10, 6))\nsns.countplot(data=hotel_data, x='market_segment_type', hue='booking_status')\nplt.title('Market Segments vs. Booking Cancellations')\nplt.xlabel('Market Segment')\nplt.ylabel('Number of Bookings')\nplt.legend(title='Booking Status')\nplt.xticks(rotation=45)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:43:03.40165Z","iopub.execute_input":"2024-10-04T06:43:03.402128Z","iopub.status.idle":"2024-10-04T06:43:03.858172Z","shell.execute_reply.started":"2024-10-04T06:43:03.402064Z","shell.execute_reply":"2024-10-04T06:43:03.857056Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 12. Influence of Car Parking Space Requirement on Booking Cancellations\nplt.figure(figsize=(8, 6))\nsns.countplot(data=hotel_data, x='required_car_parking_space', hue='booking_status')\nplt.title('Car Parking Requirement vs. Booking Cancellations')\nplt.xlabel('Car Parking Required')\nplt.ylabel('Number of Bookings')\nplt.legend(title='Booking Status')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:43:03.859703Z","iopub.execute_input":"2024-10-04T06:43:03.860163Z","iopub.status.idle":"2024-10-04T06:43:04.157547Z","shell.execute_reply.started":"2024-10-04T06:43:03.860117Z","shell.execute_reply":"2024-10-04T06:43:04.156251Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 13. Booking Trends with Different Room Types\nplt.figure(figsize=(10, 6))\nsns.countplot(data=hotel_data, x='arrival_year', hue='room_type_reserved')\nplt.title('Booking Trends with Different Room Types')\nplt.xlabel('Year')\nplt.ylabel('Number of Bookings')\nplt.legend(title='Room Type Reserved')\nplt.xticks(rotation=45)\nplt.show()\n\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:43:04.158913Z","iopub.execute_input":"2024-10-04T06:43:04.159296Z","iopub.status.idle":"2024-10-04T06:43:04.637116Z","shell.execute_reply.started":"2024-10-04T06:43:04.159264Z","shell.execute_reply":"2024-10-04T06:43:04.635738Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 14. Relationship between Previous Cancellations and Likelihood of Future Cancellations\nplt.figure(figsize=(8, 6))\nsns.countplot(data=hotel_data, x='no_of_previous_cancellations', hue='booking_status')\nplt.title('Previous Cancellations vs. Future Cancellations')\nplt.xlabel('Number of Previous Cancellations')\nplt.ylabel('Number of Bookings')\nplt.legend(title='Booking Status')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:43:04.638781Z","iopub.execute_input":"2024-10-04T06:43:04.639263Z","iopub.status.idle":"2024-10-04T06:43:05.084785Z","shell.execute_reply.started":"2024-10-04T06:43:04.639219Z","shell.execute_reply":"2024-10-04T06:43:05.08352Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 15. Variation in Average Lead Time Across Different Market Segment\nplt.figure(figsize=(10, 6))\nsns.barplot(data=hotel_data, x='market_segment_type', y='lead_time', ci=None)\nplt.title('Average Lead Time Across Market Segments')\nplt.xlabel('Market Segment')\nplt.ylabel('Average Lead Time')\nplt.xticks(rotation=45)\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-04T06:43:05.086401Z","iopub.execute_input":"2024-10-04T06:43:05.0868Z","iopub.status.idle":"2024-10-04T06:43:05.435748Z","shell.execute_reply.started":"2024-10-04T06:43:05.086768Z","shell.execute_reply":"2024-10-04T06:43:05.434307Z"},"trusted":true},"execution_count":null,"outputs":[]}]}